#server {
#    server_name coolrc.top www.coolrc.top;
#
#    location ^~ /.well-known/acme-challenge/ {
#        alias /root/www/challenges/;
#        try_files $uri =404;
#    }
#
#    location / {
#        rewrite ^/(.*)$ https://yoursite.com/$1 permanent;
#    }
#}


server {
    listen              [::]:443;
    listen              443 ssl  http2 fastopen=3 reuseport;
#    listen               [::]:443
#add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # 如果你使用了 Cloudflare 的 HTTP/2 + SPDY 补丁，记得加上 spdy
    # listen               443 ssl http2 spdy fastopen=3 reuseport;

    server_name          www.coolrc.me coolrc.me;
    server_tokens        off;

    include              /root/www/nginx_conf/ip.blacklist;

    # https://imququ.com/post/certificate-transparency.html#toc-2
    ssl_ct               on;
    ssl_ct_static_scts   /root/www/coolrc.me/scts;

    # 中间证书 + 站点证书
    ssl_certificate      /root/www/coolrc.me/ssl/chained.pem;

    # 创建 CSR 文件时用的密钥
    ssl_certificate_key  /root/www/coolrc.me/ssl/domain.key;

    # openssl dhparam -out dhparams.pem 2048
    # https://weakdh.org/sysadmin.html
    ssl_dhparam          /root/www/coolrc.me/ssl/dhparams.pem;

    # https://github.com/cloudflare/sslconfig/blob/master/conf
    # ssl_ciphers                EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    ssl_ciphers                EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    # 如果启用了 RSA + ECDSA 双证书，Cipher Suite 可以参考以下配置：
    # ssl_ciphers              EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;

    ssl_prefer_server_ciphers  on;

    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;

    ssl_session_cache          shared:SSL:50m;
    ssl_session_timeout        1d;

    ssl_session_tickets        on;

    # openssl rand 48 > session_ticket.key
    # 单机部署可以不指定 ssl_session_ticket_key
    ssl_session_ticket_key     /root/www/coolrc.me/ssl/session_ticket.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    ssl_stapling               on;
    ssl_stapling_verify        on;

    # 根证书 + 中间证书
    # https://imququ.com/post/why-can-not-turn-on-ocsp-stapling.html
    ssl_trusted_certificate    /root/www/coolrc.me/ssl/full_chained.pem;

    resolver                   8.8.4.4 valid=300s;
    resolver_timeout           10s;

    access_log                 /root/www/nginx_log/imququ_com.log;

    if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$ ) {
        return           444;
    }

         location /.well-known/acme-challenge {
           alias /var/www/dehydrated;
         }

    #重定向到coolrc.me
    if ($host = 'www.coolrc.me' ) {
        rewrite          ^/(.*)$  https://coolrc.me/$1 permanent;
    }
location /download {
    alias /root/download;
}


    location / {
            add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
            proxy_pass http://coolrc136.github.io; #这里使用https会出问题
            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header referer "http://coolrc136.github.io$request_uri";
    }
}

server {
    listen [::]:80;
    server_name       www.coolrc.me coolrc.me;
    server_tokens     off;

    access_log        /dev/null;

    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return        444;
    }

         location /.well-known/acme-challenge {
           alias /var/www/dehydrated;
         }

    location / {
#    add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains; pr    eload";
        rewrite       ^/(.*)$ https://coolrc.me/$1 permanent;
    }
}
